
problem statement
You can analyze all the tables by describing and printing their contents.

Task: Describe the TABLE- orders; 1. TABLE- orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order
2. TABLE- customers:
Customer_ID(VARCHAR) - ID of the customer, primary key of the table
Customer_Name_(VARCHAR) - Name of the Customer
3. TABLE- returns:
Order_ID(VARCHAR) - Primary key of the order returned
Returned(VARCHAR) - If the order was returned or not

-------------

desc orders


---------------


Problem statement
You are required to find out which category is performing better in terms of profit than the others so that business can find ways to improve.

Write a query for the same. Result should be such that the highest profit category and its respective sum of profit be on the top of result set.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

-------------

SELECT Category,SUM(Profit)
FROM orders
GROUP BY Category ORDER BY SUM(Profit) DESC;

---------------

Problem statement
While going through the data set you found out that the State column in the Orders table also contains Union territories and found a mistake.

You found that for Chandigarh the city is marked as Delhi. You pointed out this mistake to database manager and he asks you to update the table

Write the query to update the city as Chandigarh where the State is Chandigarh.
Print all the contents of the table after updating.

Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

---------------------

update orders
SET City = 'Chandigarh'
WHERE State = 'Chandigarh';

SELECT * FROM orders;
--------------------


Problem statement
As a next step, you want to know how much company profit has been generated by the company so far.

Write a query to find the total profit sum from orders table.

Result should be such that only total profit sum is returned.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

------------------------------------
select sum(profit) from orders

--------------

Problem statement
You saw that the company has made good profits so far. You are required to report which order had the highest profit so far.

Write a query to get the OrderID, ProductName and Profit. Result should be with respect to profit(In increasing order).
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

----------------------------
SELECT distinct Order_ID, Product_Name , Profit
FROM orders
ORDER BY Profit 

----------------------

Problem statement
Your manager wants to know the Product with highest loss. Write the Product_Name of such product. (Loss is when profit gets negative.)

 Maintain the same alphabet case as in the Product_Name.

--------------

Cubify CubeX 3D Printer Double Head Print
----------------------------

Problem statement
Going through the data, you also want to report orders where there was loss.

Write a query to get all the orders where there was a loss and report the order ID, product name and loss. Sort the result in a format that the highest loss is on the top.

Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

-----------------------
select Order_ID,Product_Name, Profit from orders
order by Profit;

----------------------------

Problem statement
Now you know all the orders where there was a loss. You are curious to know why the company made a loss on those items. You see that discounts are also given on some items.

Write a query to get the list of all orders which have loss and sort them in descending order of discount given.

Print OrderID, ProductName, Profit and Discount.

Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

------------------
select Order_ID, Product_Name, Profit , Discount from orders
where Profit<0
order by Discount desc
-----------------------

Problem statement
Does the order with the highest loss was given the highest discount?

Write N(For No) and Y(For Yes).
N

---------------

Problem statement
You now want to know if there are particular states which are making losses. Write a query to get the State and sum of profit for each state. The result should be in increasing order of profit.

Refer Table-orders.
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

-------------------
SELECT State, SUM(Profit)
FROM orders
GROUP BY State
ORDER BY SUM(Profit) ASC;

--------------------

Problem statement
Select the states which are making a loss?

----------

delhi and DD

-------------

Problem statement
You have done a great job in helping the firm come up with states which are reporting losses. Now you want to go further and list categories in each state and see their profit. This will help analyze how various categories are performing in each state.

Write a query to get state, category and sum of profits.
Refer Table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

-------------------
select State , Category, sum(Profit) from orders 
group by State,Category

-----------------

Problem statement
You realised that there are three segments of products: Consumer, Corporate and Home office. You ask your manager to provide you a list of the people who are managing these segments. Unfortunately these are not present in the database. Since you want to digitise the system, you plan to put the data in the database. He provides you the data on a sheet of paper as follows:

Segment - Varchar(100)
Segment_Manager- Varchar(100)
Write a query to create a table in the database with Name as Manager and with values provided. Do assign proper Primary key.
ALT TEXT
----------------------
CREATE TABLE Manager (
    Segment VARCHAR(100) PRIMARY KEY,
    Segment_Manager  VARCHAR(100)
);

INSERT INTO Manager (Segment, Segment_Manager)
VALUES 
    ('Consumer', 'Gaganjit Singh'),
    ('Corporate', 'Aman Jain'),
    ('Home Office', 'Kush Arora');
select * from manager

--------------------------------------------

Problem statement
Now you have a table in the database named Manager. You are required to get the total profit and total orders for each segment.

Write a query to get Segment, count of order, sum of profit.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

----------
select Segment, Count(Order_ID), Sum(Profit) from orders group by Segment;


-------------------

Problem statement
Which manager reported the highest profit.

ALT TEXT

 Refer the result from last query.
Write the name in lower case alphabets:
gaganjit singh
--------------------

Problem statement
Since you want to help the segment managers get fair evaluation and your manager has asked you to get the covid effect on the sales.

Write the query to get sum of sales, sum of profit for the year 2020.

Note: Order_Date has char data type.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

----------------------
SELECT 
    SUM(Sales),
    SUM(Profit)
FROM 
    orders
WHERE 
    SUBSTR(Order_Date, -2) = '20';

------------------------

Problem statement
Now your manager wants you to remove 2020 from the total sales and profit and present the result. Write a query to get the sum of sales of each segment and their respective segment manager for all years except 2020.

Refer table- orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Refer table- manager
Segment(VARCHAR)- to which segment does the product sold belongs to
Segment_Manager(VARCHAR)- Manager of the respective segment
Expected Output

ALT TEXT
----------------------------------
SELECT SUM(orders.Sales) , manager.Segment_Manager
FROM orders
JOIN manager ON orders.Segment = manager.Segment
WHERE YEAR(STR_TO_DATE(orders.Order_Date, '%d-%b-%y')) <> 2020
GROUP BY manager.Segment_Manager;
------------------------------

Problem statement
Great job! You have helped your manager make the right decision in performance evaluation of segment managers. As for the next task, he wants you to help him do analysis on the customer level.

Write a query to get Customer ID and sum of profit for each. The result should be such that you are easily able to find the highest profit customer.

Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order
-----------------------------
select Customer_ID, sum(profit) from orders
group by Customer_ID order by sum(profit) desc


----------------------------------

Problem statement
Write down the customer id of the highest profit customer.

Refer the result from previous query.
Note: Answer is case sensitive.
TC-20980
----------------------------

Problem statement
Write a query to find the customer details having the highest Profit. The result should be such that you are easily able to find the highest profitable customer.

The query should have columns : Customer_ID, Customer_Name_, sum of Sales, sum of Profit, count of Order_ID.

Refer table-orders.
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order



Refer table-customers
Customer_ID (VARCHAR) - ID of the customer, primary key of the table
Customer_Name_ (VARCHAR) - Name of the Customer
------------------------------

Select orders.Customer_ID, customers.Customer_Name_, SUM(orders.Sales), SUM(orders.Profit),
count(orders.Order_ID)
from orders inner join customers
on orders.Customer_ID=customers.Customer_ID
group by customers.Customer_ID, customers.Customer_Name_
order by SUM(orders.Profit) desc;

---------------------------


